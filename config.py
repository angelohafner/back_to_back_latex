import locale
import streamlit as st
from dicionarios import translations

# DicionÃ¡rio de idiomas com bandeiras
language_options = {
    "en": "ğŸ‡¬ğŸ‡§ English",
    "pt": "ğŸ‡§ğŸ‡· PortuguÃªs",
    "zh": "ğŸ‡¨ğŸ‡³ ä¸­æ–‡ (Chinese)",
    "es": "ğŸ‡ªğŸ‡¸ EspaÃ±ol (Spanish)",
    "fr": "ğŸ‡«ğŸ‡· FranÃ§ais (French)",
    "de": "ğŸ‡©ğŸ‡ª Deutsch (German)"
}

def configure_language_and_locale():
    # CriaÃ§Ã£o de uma lista de idiomas a partir do dicionÃ¡rio
    language_list = list(language_options.values())

    # Caixa de seleÃ§Ã£o mais sofisticada para escolha de idioma
    selected_language = st.selectbox(
        "Choose Language / Escolha o idioma / é€‰æ‹©è¯­è¨€ / Sprache wÃ¤hlen",
        language_list
    )

    # ObtenÃ§Ã£o da chave do idioma selecionado a partir do valor escolhido
    language_key = list(language_options.keys())[language_list.index(selected_language)]

    # Acesso ao dicionÃ¡rio de traduÃ§Ãµes com a chave selecionada
    text = translations[language_key]

    # ConfiguraÃ§Ã£o do locale
    if language_key == 'en':
        # InglÃªs dos EUA - Ponto como separador decimal
        locale.setlocale(locale.LC_ALL, 'en_US.UTF-8')
    elif language_key in ['de', 'fr', 'pt', 'it', 'es']:
        # Alemanha, FranÃ§a, Brasil, ItÃ¡lia, Espanha - VÃ­rgula como separador decimal
        locale.setlocale(locale.LC_ALL, 'de_DE.UTF-8')
    else:
        # Outros idiomas
        locale.setlocale(locale.LC_ALL, '')

    return text, language_key



import locale

def format_number(value, language_key):
    if language_key == 'en':
        # Use dot as decimal separator
        return locale.format_string("%.2f", value, grouping=True)
    else:
        # Use comma as decimal separator
        return locale.format_string("%.2f", value, grouping=True).replace('.', ',')

